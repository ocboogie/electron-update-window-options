import {
  BrowserWindow,
  BrowserWindowConstructorOptions,
  NativeImage
} from "electron";

export type Options = Array<
  [string | string[], (window: BrowserWindow, ...args: any[]) => void]
>;

const options: Options = [
  [
    ["width", "height"],
    (window: BrowserWindow, width: number, height: number) =>
      window.setSize(width, height)
  ],
  [
    ["x", "y"],
    (window: BrowserWindow, x: number, y: number) => window.setPosition(x, y)
  ],
  [
    "center",
    (window: BrowserWindow, center: boolean) => {
      if (center) window.center();
    }
  ],
  [
    "resizable",
    (window: BrowserWindow, resizable: boolean) =>
      window.setResizable(resizable)
  ],
  [
    "movable",
    (window: BrowserWindow, movable: boolean) => window.setMovable(movable)
  ],
  [
    "minimizable",
    (window: BrowserWindow, minimizable: boolean) =>
      window.setMinimizable(minimizable)
  ],
  [
    "maximizable",
    (window: BrowserWindow, maximizable: boolean) =>
      window.setMaximizable(maximizable)
  ],
  [
    "closable",
    (window: BrowserWindow, closable: boolean) => window.setClosable(closable)
  ],
  [
    "focusable",
    (window: BrowserWindow, focusable: boolean) =>
      window.setFocusable(focusable)
  ],
  [
    "alwaysOnTop",
    (window: BrowserWindow, alwaysOnTop: boolean) =>
      window.setAlwaysOnTop(alwaysOnTop)
  ],
  [
    "fullscreen",
    (window: BrowserWindow, fullscreen: boolean) =>
      window.setFullScreen(fullscreen)
  ],
  [
    "fullscreenable",
    (window: BrowserWindow, fullscreenable: boolean) =>
      window.setFullScreenable(fullscreenable)
  ],
  // On the docs but not on the typings
  // https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetsimplefullscreenflag-macos
  // [
  //   "simpleFullscreen",
  //   (window: BrowserWindow, simpleFullscreen: boolean) =>
  //     window.setSimpleFullScreen(simpleFullscreen)
  // ],
  [
    "skipTaskbar",
    (window: BrowserWindow, skipTaskbar: boolean) =>
      window.setSkipTaskbar(skipTaskbar)
  ],
  ["kiosk", (window: BrowserWindow, kiosk: boolean) => window.setKiosk(kiosk)],
  ["title", (window: BrowserWindow, title: string) => window.setTitle(title)],
  ["icon", (window: BrowserWindow, icon: NativeImage) => window.setIcon(icon)],
  [
    "show",
    (window: BrowserWindow, show: boolean) =>
      show ? window.show() : window.hide()
  ],
  [
    "parent",
    (window: BrowserWindow, parent: BrowserWindow) =>
      window.setParentWindow(parent)
  ],
  [
    "disableAutoHideCursor",
    (window: BrowserWindow, autoHideCursor: boolean) =>
      window.setAutoHideCursor(!autoHideCursor)
  ],
  [
    "autoHideMenuBar",
    (window: BrowserWindow, autoHideMenuBar: boolean) =>
      window.setAutoHideCursor(autoHideMenuBar)
  ],
  [
    "hasShadow",
    (window: BrowserWindow, hasShadow: boolean) =>
      window.setHasShadow(hasShadow)
  ],
  // On the docs but not on the typings
  // https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetopacityopacity-windows-macos
  // [
  //   "opacity",
  //   (window: BrowserWindow, opacity: number) => window.setOpacity(opacity)
  // ],
  [
    "vibrancy",
    (
      window: BrowserWindow,
      vibrancy:
        | "appearance-based"
        | "light"
        | "dark"
        | "titlebar"
        | "selection"
        | "menu"
        | "popover"
        | "sidebar"
        | "medium-light"
        | "ultra-dark"
    ) => window.setVibrancy(vibrancy)
  ]
];

export default options;
